*** Begin Patch
*** Update File: /home/deb1/esp/projects/00_dev/components/wifi_setup/wifi_setup.c
@@
 #include "esp_event.h"
 
 /* WiFi event handlers for connection attempts */
-static void wifi_event_handler(void* arg, esp_event_base_t event_base,
-                                int32_t event_id, void* event_data)
+/* forward declare event handler so cleanup functions can reference it */
+static void wifi_event_handler(void* arg, esp_event_base_t event_base,
+                               int32_t event_id, void* event_data);
+
+/* WiFi event handlers for connection attempts */
+static void wifi_event_handler(void* arg, esp_event_base_t event_base,
+                               int32_t event_id, void* event_data)
 {
     if (event_base == WIFI_EVENT && event_id == WIFI_EVENT_STA_START) {
         esp_wifi_connect();
     } else if (event_base == WIFI_EVENT && event_id == WIFI_EVENT_STA_DISCONNECTED) {
         xEventGroupSetBits(wifi_event_group, FAIL_BIT);
     } else if (event_base == IP_EVENT && event_id == IP_EVENT_STA_GOT_IP) {
         xEventGroupSetBits(wifi_event_group, CONNECTED_BIT);
     }
 }
 
+/* cleanup helper used by connect/disconnect flows */
 static void cleanup_sta_resources(void)
 {
-    esp_event_handler_instance_unregister(WIFI_EVENT, ESP_EVENT_ANY_ID, &wifi_event_handler);
-    esp_event_handler_instance_unregister(IP_EVENT, IP_EVENT_STA_GOT_IP, &wifi_event_handler);
+    /* unregister expects the handler function pointer (not &handler) or the instance handle.
+       Use the function pointer here to match how it was registered in this file. */
+    esp_event_handler_unregister(WIFI_EVENT, ESP_EVENT_ANY_ID, wifi_event_handler);
+    esp_event_handler_unregister(IP_EVENT, IP_EVENT_STA_GOT_IP, wifi_event_handler);
     esp_wifi_stop();
     esp_wifi_deinit();
 }
*** End Patch
